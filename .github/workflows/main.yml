name: CI/CD Pipeline

on:
  push:
    branches:
      - main # Adjust branch as per your setup

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: "17"
          distribution: temurin

      - name: Validate directory structure
        run: |
          echo "Validating directory structure..."
          ls -la
          ls -la Backend-Java-Spring
          ls -la Frontend-Angular

      - name: Build Manufacturer Microservice
        run: |
          cd Backend-Java-Spring/Manufacturer
          ./mvnw clean package

      - name: Build ShopClues Microservice
        run: |
          cd Backend-Java-Spring/ShopClues
          ./mvnw clean package

      - name: Build ShopWise Microservice
        run: |
          cd Backend-Java-Spring/ShopWise
          ./mvnw clean package

      - name: Build ShopClues Frontend Application
        run: |
          cd Frontend-Angular/ShopClues
          npm install
          npm run build

      - name: Build ShopWise Frontend Application
        run: |
          cd Frontend-Angular/ShopWise
          npm install
          npm run build

      - name: Build Docker Images and Push to ECR
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
          AWS_REGION: ap-south-1
        run: |
          AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)

          # Manufacturer Microservice
          cd Backend-Java-Spring/Manufacturer
          docker build -t manufacturer-backend .
          docker tag manufacturer-backend:latest $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/manufacturer-backend:latest

          # ShopClues Microservice
          cd ../ShopClues
          docker build -t shopclues-backend .
          docker tag shopclues-backend:latest $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/shopclues-backend:latest

          # ShopWise Microservice
          cd ../ShopWise
          docker build -t shopwise-backend .
          docker tag shopwise-backend:latest $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/shopwise-backend:latest

          # ShopClues Frontend
          cd ../../Frontend-Angular/ShopClues
          docker build -t shopclues-frontend .
          docker tag shopclues-frontend:latest $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/shopclues-frontend:latest

          # ShopWise Frontend
          cd ../ShopWise
          docker build -t shopwise-frontend .
          docker tag shopwise-frontend:latest $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/shopwise-frontend:latest

          # Login to ECR
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com

          # Push Docker Images
          docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/manufacturer-backend:latest
          docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/shopclues-backend:latest
          docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/shopwise-backend:latest
          docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/shopclues-frontend:latest
          docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/shopwise-frontend:latest

      - name: Deploy to EKS Cluster
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
          AWS_REGION: ap-south-1
        run: |
          aws eks update-kubeconfig --name my-eks-cluster --region $AWS_REGION

          # Apply Kubernetes deployment and service files for Manufacturer Microservice
          kubectl apply -f k8s/manufacturer-deployment.yaml
          kubectl apply -f k8s/service.yaml

          # Apply Kubernetes deployment and service files for ShopClues Microservice
          kubectl apply -f k8s/shopclues-deployment.yaml
          kubectl apply -f k8s/service.yaml

          # Apply Kubernetes deployment and service files for ShopWise Microservice
          kubectl apply -f k8s/shopwise-deployment.yaml
          kubectl apply -f k8s/service.yaml

          # Apply Kubernetes deployment and service files for ShopClues Frontend
          kubectl apply -f k8s/shopclues-frontend-deployment.yaml
          kubectl apply -f k8s/service.yaml

          # Apply Kubernetes deployment and service files for ShopWise Frontend
          kubectl apply -f k8s/shopwise-frontend-deployment.yaml
          kubectl apply -f k8s/service.yaml
